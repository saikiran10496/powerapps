name: Deploy Power Platform Solution1
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: windows-latest  
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Install Power Platform CLI
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri https://aka.ms/PowerAppsCLI -OutFile PowerAppsCLI.msi
        Start-Process msiexec.exe -ArgumentList '/i PowerAppsCLI.msi /quiet /norestart' -Wait
        
        # Check in common installation locations instead of searching the entire drive
        $possiblePaths = @(
          "C:\Program Files\Microsoft\PowerApps CLI\pac.exe",
          "C:\Program Files (x86)\Microsoft\PowerApps CLI\pac.exe",
          "$env:LOCALAPPDATA\Microsoft\PowerApps CLI\pac.exe",
          "$env:ProgramFiles\Microsoft\PowerApps CLI\pac.exe"
        )
        
        $pacPath = $null
        foreach ($path in $possiblePaths) {
          if (Test-Path $path) {
            $pacPath = $path
            Write-Host "Found PAC at: $pacPath"
            break
          }
        }
        
        if ($pacPath -eq $null) {
          Write-Host "PAC not found in common locations, trying a limited search..."
          # Limited search in Program Files
          $pacPath = Get-ChildItem -Path "C:\Program Files" -Filter "pac.exe" -Recurse -ErrorAction SilentlyContinue -Depth 3 | Select-Object -First 1 -ExpandProperty FullName
        }
        
        if ($pacPath -eq $null) {
          Write-Error "Could not find PAC executable"
          exit 1
        }
        
        # Get the directory and add to PATH
        $pacDir = Split-Path -Parent $pacPath
        Write-Host "PAC directory: $pacDir"
        $env:PATH += ";$pacDir"
        
        # Set environment variable for later steps
        echo "PAC_DIR=$pacDir" >> $env:GITHUB_ENV
        
        # Verify pac installation by running version
        & $pacPath version
        
    - name: Authenticate with Power Platform (Source)
      shell: pwsh
      run: |
        if (-not (Test-Path "$env:PAC_DIR\pac.exe")) {
          Write-Error "PAC executable not found at $env:PAC_DIR\pac.exe"
          exit 1
        }
        
        & "$env:PAC_DIR\pac.exe" auth create --applicationId "${{ secrets.CLIENT_ID }}" `
                        --tenant "${{ secrets.TENANT_ID }}" `
                        --clientSecret "${{ secrets.CLIENT_SECRET }}" `
                        --url "https://org9df2a3ac.crm.dynamics.com"
    
    - name: Export Solution from Source Environment
      shell: pwsh
      run: |
        & "$env:PAC_DIR\pac.exe" solution export --name "sol1" `
                    --path "./exportedSolutions" `
                    --managed false
                            
